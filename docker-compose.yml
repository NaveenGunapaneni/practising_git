version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: geopulse-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: geopulse_db
      POSTGRES_USER: geopulse_user
      POSTGRES_PASSWORD: geopulse_secure_123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/API/database/setup_postgres.sql:/docker-entrypoint-initdb.d/01-setup.sql
    ports:
      - "5433:5432"
    networks:
      - geopulse-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U geopulse_user -d geopulse_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Backend
  api:
    build:
      context: ./src/API
      dockerfile: Dockerfile
    container_name: geopulse-api
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql+asyncpg://geopulse_user:geopulse_secure_123@db:5432/geopulse_db
      - SECRET_KEY=your-secret-key-here-change-in-production
      - JWT_SECRET_KEY=your-jwt-secret-key-here-change-in-production
      - CORS_ALLOW_ORIGINS=http://localhost:3001,http://ui:3000
      - LOG_LEVEL=INFO
    volumes:
      - api_data:/app/user_data
      - api_logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - geopulse-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  ui:
    build:
      context: ./src/UI
      dockerfile: Dockerfile
    container_name: geopulse-ui
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_API_BASE_URL=http://api:8000
    ports:
      - "3001:3000"
    depends_on:
      - api
    networks:
      - geopulse-network
    volumes:
      - ui_node_modules:/app/node_modules
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: geopulse-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@geopulse.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - geopulse-network

volumes:
  postgres_data:
    driver: local
  api_data:
    driver: local
  api_logs:
    driver: local
  ui_node_modules:
    driver: local

networks:
  geopulse-network:
    driver: bridge
